{"ast":null,"code":"import React,{useState,useRef}from\"react\";import axios from\"axios\";import{ClipLoader}from\"react-spinners\";import Select from\"react-select\";import{scaleOptions,languageOptions,selectStyle}from\"../constants\";import\"./audioRecorder.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioRecorder=()=>{const[isRecording,setIsRecording]=useState(false);const[isUploading,setIsUploading]=useState(false);const[showLongProcessMessage,setShowLongProcessMessage]=useState(false);const[selectedLanguageCode,setSelectedLanguageCode]=useState(\"\");const[selectedScale,setSelectedScale]=useState(\"\");const[pitches,setPitches]=useState([]);const[uploadedFile,setUploadedFile]=useState(null);const mediaRecorderRef=useRef(null);const audioChunksRef=useRef([]);const handleChangeLanguage=selectedOption=>{setSelectedLanguageCode(selectedOption.value);};const handleChangeScale=selectedOption=>{setSelectedScale(selectedOption.value);};const handleFileUpload=async event=>{const file=event.target.files[0];console.log(file);if(file){setUploadedFile(file);await processAudio(file);}};const processAudio=async file=>{setIsUploading(true);setShowLongProcessMessage(false);const timer=setTimeout(()=>{setShowLongProcessMessage(true);},10000);const formData=new FormData();formData.append(\"file\",file);formData.append(\"language\",selectedLanguageCode);try{const response=await axios.post(\"/api/upload\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});let lyrics=response.data.lyrics;console.log(lyrics);await analyzePitches(lyrics,file);}catch(error){var _error$response;console.error(\"Error uploading file:\",(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);}finally{setIsUploading(false);setShowLongProcessMessage(false);clearTimeout(timer);setUploadedFile(null);}};const analyzePitches=async(lyrics,file)=>{const formData=new FormData();formData.append(\"file\",file);formData.append(\"lyrics\",JSON.stringify(lyrics));formData.append(\"scale\",selectedScale);console.log(selectedScale);try{const response=await axios.post(\"/api/analyze-pitches\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});//setPitches(response.data.pitches);\nconsole.log(response.data);}catch(error){var _error$response2;console.error(\"Error analyzing pitches:\",(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data);}};const startRecording=async()=>{if(uploadedFile||isRecording)return;setIsRecording(true);const stream=await navigator.mediaDevices.getUserMedia({audio:true});mediaRecorderRef.current=new MediaRecorder(stream);audioChunksRef.current=[];mediaRecorderRef.current.ondataavailable=event=>{audioChunksRef.current.push(event.data);};mediaRecorderRef.current.onstop=async()=>{const audioBlob=new Blob(audioChunksRef.current,{type:\"audio/mp3\"});const audioFile=new File([audioBlob],\"recording.mp3\",{type:\"audio/mp3\"});await processAudio(audioFile);};mediaRecorderRef.current.start();};const handleStopRecording=()=>{setIsRecording(false);mediaRecorderRef.current.stop();};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:isUploading?/*#__PURE__*/_jsxs(\"div\",{className:\"spinner-container\",children:[/*#__PURE__*/_jsx(ClipLoader,{color:\"#FFF\",size:50}),showLongProcessMessage&&/*#__PURE__*/_jsx(\"p\",{children:\"This may take a while...\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pitch It\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileUpload,disabled:isRecording,accept:\"audio/*\"}),/*#__PURE__*/_jsx(\"button\",{onClick:isRecording?handleStopRecording:startRecording,disabled:!!uploadedFile,className:\"record-button \".concat(isRecording?\"recording\":\"\"),children:isRecording?/*#__PURE__*/_jsx(\"div\",{className:\"inner-square\"}):/*#__PURE__*/_jsx(\"div\",{className:\"inner-circle\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"selectors\",children:[/*#__PURE__*/_jsx(Select,{options:languageOptions,onChange:handleChangeLanguage,placeholder:\"Language\",styles:selectStyle,isDisabled:isRecording||isUploading}),/*#__PURE__*/_jsx(Select,{options:scaleOptions,onChange:handleChangeScale,placeholder:\"Key\",styles:selectStyle,isDisabled:isRecording||isUploading})]}),pitches&&pitches.map((pitch,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:pitch.note}),/*#__PURE__*/_jsx(\"h1\",{children:pitch.frequency})]},index))]})});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","axios","ClipLoader","Select","scaleOptions","languageOptions","selectStyle","jsx","_jsx","jsxs","_jsxs","AudioRecorder","isRecording","setIsRecording","isUploading","setIsUploading","showLongProcessMessage","setShowLongProcessMessage","selectedLanguageCode","setSelectedLanguageCode","selectedScale","setSelectedScale","pitches","setPitches","uploadedFile","setUploadedFile","mediaRecorderRef","audioChunksRef","handleChangeLanguage","selectedOption","value","handleChangeScale","handleFileUpload","event","file","target","files","console","log","processAudio","timer","setTimeout","formData","FormData","append","response","post","headers","lyrics","data","analyzePitches","error","_error$response","clearTimeout","JSON","stringify","_error$response2","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","push","onstop","audioBlob","Blob","type","audioFile","File","start","handleStopRecording","stop","className","children","color","size","onChange","disabled","accept","onClick","concat","options","placeholder","styles","isDisabled","map","pitch","index","note","frequency"],"sources":["/var/www/pitch-it/client/src/components/audioRecorder.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { ClipLoader } from \"react-spinners\";\nimport Select from \"react-select\";\nimport { scaleOptions, languageOptions, selectStyle } from \"../constants\";\nimport \"./audioRecorder.css\";\n\nconst AudioRecorder = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showLongProcessMessage, setShowLongProcessMessage] = useState(false);\n  const [selectedLanguageCode, setSelectedLanguageCode] = useState(\"\");\n  const [selectedScale, setSelectedScale] = useState(\"\");\n  const [pitches, setPitches] = useState([]);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const handleChangeLanguage = (selectedOption) => {\n    setSelectedLanguageCode(selectedOption.value);\n  };\n\n  const handleChangeScale = (selectedOption) => {\n    setSelectedScale(selectedOption.value);\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    console.log(file);\n    if (file) {\n      setUploadedFile(file);\n      await processAudio(file);\n    }\n  };\n\n  const processAudio = async (file) => {\n    setIsUploading(true);\n    setShowLongProcessMessage(false);\n    const timer = setTimeout(() => {\n      setShowLongProcessMessage(true);\n    }, 10000);\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"language\", selectedLanguageCode);\n    try {\n      const response = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      let lyrics = response.data.lyrics;\n      console.log(lyrics);\n      await analyzePitches(lyrics, file);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error.response?.data);\n    } finally {\n      setIsUploading(false);\n      setShowLongProcessMessage(false);\n      clearTimeout(timer);\n      setUploadedFile(null);\n    }\n  }\n\n  const analyzePitches = async (lyrics, file) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"lyrics\", JSON.stringify(lyrics));\n    formData.append(\"scale\", selectedScale);\n    console.log(selectedScale);\n    try {\n      const response = await axios.post(\"/api/analyze-pitches\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      //setPitches(response.data.pitches);\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error analyzing pitches:\", error.response?.data);\n    }\n  };\n\n  const startRecording = async () => {\n    if (uploadedFile || isRecording) return;\n    setIsRecording(true);\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    audioChunksRef.current = [];\n    mediaRecorderRef.current.ondataavailable = (event) => {\n      audioChunksRef.current.push(event.data);\n    };\n    mediaRecorderRef.current.onstop = async () => {\n      const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/mp3\" });\n      const audioFile = new File([audioBlob], \"recording.mp3\", { type: \"audio/mp3\" });\n      await processAudio(audioFile);\n    };\n    mediaRecorderRef.current.start();\n  };\n\n  const handleStopRecording = () => {\n    setIsRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  return (\n    <div className=\"container\">\n      {isUploading ? (\n        <div className=\"spinner-container\">\n          <ClipLoader color=\"#FFF\" size={50} />\n          {showLongProcessMessage && <p>This may take a while...</p>}\n        </div>\n      ) : (\n        <div>\n          <h1>Pitch It</h1>\n          <input\n            type=\"file\"\n            onChange={handleFileUpload}\n            disabled={isRecording}\n            accept=\"audio/*\"\n          />\n          <button\n            onClick={isRecording ? handleStopRecording : startRecording}\n            disabled={!!uploadedFile}\n            className={`record-button ${isRecording ? \"recording\" : \"\"}`}\n          >\n            {isRecording ? <div className='inner-square' /> : <div className='inner-circle' />}\n          </button>\n          <div className=\"selectors\">\n            <Select\n              options={languageOptions}\n              onChange={handleChangeLanguage}\n              placeholder=\"Language\"\n              styles={selectStyle}\n              isDisabled={isRecording || isUploading}\n            />\n            <Select\n              options={scaleOptions}\n              onChange={handleChangeScale}\n              placeholder=\"Key\"\n              styles={selectStyle}\n              isDisabled={isRecording || isUploading}\n            />\n          </div>\n          {pitches && pitches.map((pitch, index) => (\n            <div key={index}>\n              <p>{pitch.note}</p>\n              <h1>{pitch.frequency}</h1>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}