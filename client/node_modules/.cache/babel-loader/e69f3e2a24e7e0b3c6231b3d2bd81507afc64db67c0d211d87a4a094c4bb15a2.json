{"ast":null,"code":"import React,{useState,useRef}from\"react\";import axios from\"axios\";import{ClipLoader}from\"react-spinners\";import Select from\"react-select\";import{scaleOptions,languageOptions,selectStyle}from\"../constants\";import\"./audioRecorder.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioRecorder=()=>{const[isRecording,setIsRecording]=useState(false);const[isUploading,setIsUploading]=useState(false);const[showLongProcessMessage,setShowLongProcessMessage]=useState(false);const[selectedLanguageCode,setSelectedLanguageCode]=useState(\"\");const[selectedScale,setSelectedScale]=useState(\"\");const[pitches,setPitches]=useState([]);const[uploadedFile,setUploadedFile]=useState(null);const mediaRecorderRef=useRef(null);const audioChunksRef=useRef([]);const handleChangeLanguage=selectedOption=>{setSelectedLanguageCode(selectedOption.value);};const handleChangeScale=selectedOption=>{setSelectedScale(selectedOption.value);};const handleFileUpload=event=>{const file=event.target.files[0];if(file){setUploadedFile(file);setIsRecording(false);uploadAudio(file);}};const uploadAudio=async()=>{setIsUploading(true);setShowLongProcessMessage(false);const uploadFormData=new FormData();uploadFormData.append(\"file\",uploadedFile);uploadFormData.append(\"language\",selectedLanguageCode);try{const uploadResponse=await axios.post(\"/api/upload\",uploadFormData,{headers:{\"Content-Type\":\"multipart/form-data\"}});// Assuming the response contains lyrics and possibly other data\nconst lyrics=uploadResponse.data.lyrics;analyzePitches(uploadedFile,lyrics,selectedScale);}catch(error){var _error$response;console.error(\"Error uploading file:\",(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);setIsUploading(false);setShowLongProcessMessage(false);}};const analyzePitches=async(audioFile,lyrics,scale)=>{const analyzeFormData=new FormData();analyzeFormData.append(\"file\",audioFile);analyzeFormData.append(\"lyrics\",JSON.stringify(lyrics));analyzeFormData.append(\"scale\",scale);try{const analyzeResponse=await axios.post(\"/api/analyze-pitches\",analyzeFormData,{headers:{\"Content-Type\":\"multipart/form-data\"}});setPitches(analyzeResponse.data.pitches);const audioData=analyzeResponse.data.audio_file;console.log(audioData);}catch(error){var _error$response2;console.error(\"Error analyzing pitches:\",(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data);}finally{setIsUploading(false);setShowLongProcessMessage(false);}};const startRecording=async()=>{if(uploadedFile)return;// Do not start recording if a file has been uploaded\nsetIsRecording(true);const stream=await navigator.mediaDevices.getUserMedia({audio:true});mediaRecorderRef.current=new MediaRecorder(stream);audioChunksRef.current=[];mediaRecorderRef.current.ondataavailable=event=>{audioChunksRef.current.push(event.data);};mediaRecorderRef.current.onstop=uploadAudio;// Call uploadAudio directly after recording stops\nmediaRecorderRef.current.start();};const handleStopRecording=()=>{setIsRecording(false);mediaRecorderRef.current.stop();};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:isUploading?/*#__PURE__*/_jsxs(\"div\",{className:\"spinner-container\",children:[/*#__PURE__*/_jsx(ClipLoader,{color:\"#FFF\",size:50}),showLongProcessMessage&&/*#__PURE__*/_jsx(\"p\",{children:\"This may take a while...\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pitch It\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileUpload,disabled:isRecording,accept:\"audio/*\"}),/*#__PURE__*/_jsx(\"button\",{onClick:isRecording?handleStopRecording:startRecording,disabled:!!uploadedFile,className:\"record-button \".concat(isRecording?\"recording\":\"\"),children:/*#__PURE__*/_jsx(\"div\",{className:isRecording?'inner-square':'inner-circle'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"selectors\",children:[/*#__PURE__*/_jsx(Select,{options:languageOptions,onChange:handleChangeLanguage,placeholder:\"Language\",styles:selectStyle,isDisabled:isRecording||isUploading}),/*#__PURE__*/_jsx(Select,{options:scaleOptions,onChange:handleChangeScale,placeholder:\"Key\",styles:selectStyle,isDisabled:isRecording||isUploading})]}),pitches&&pitches.map((pitch,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:pitch.note}),/*#__PURE__*/_jsx(\"h1\",{children:pitch.frequency})]},index))]})});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","axios","ClipLoader","Select","scaleOptions","languageOptions","selectStyle","jsx","_jsx","jsxs","_jsxs","AudioRecorder","isRecording","setIsRecording","isUploading","setIsUploading","showLongProcessMessage","setShowLongProcessMessage","selectedLanguageCode","setSelectedLanguageCode","selectedScale","setSelectedScale","pitches","setPitches","uploadedFile","setUploadedFile","mediaRecorderRef","audioChunksRef","handleChangeLanguage","selectedOption","value","handleChangeScale","handleFileUpload","event","file","target","files","uploadAudio","uploadFormData","FormData","append","uploadResponse","post","headers","lyrics","data","analyzePitches","error","_error$response","console","response","audioFile","scale","analyzeFormData","JSON","stringify","analyzeResponse","audioData","audio_file","log","_error$response2","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","push","onstop","start","handleStopRecording","stop","className","children","color","size","type","onChange","disabled","accept","onClick","concat","options","placeholder","styles","isDisabled","map","pitch","index","note","frequency"],"sources":["/var/www/pitch-it/client/src/components/audioRecorder.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { ClipLoader } from \"react-spinners\";\nimport Select from \"react-select\";\nimport { scaleOptions, languageOptions, selectStyle } from \"../constants\";\nimport \"./audioRecorder.css\";\n\nconst AudioRecorder = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showLongProcessMessage, setShowLongProcessMessage] = useState(false);\n  const [selectedLanguageCode, setSelectedLanguageCode] = useState(\"\");\n  const [selectedScale, setSelectedScale] = useState(\"\");\n  const [pitches, setPitches] = useState([]);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const handleChangeLanguage = (selectedOption) => {\n    setSelectedLanguageCode(selectedOption.value);\n  };\n\n  const handleChangeScale = (selectedOption) => {\n    setSelectedScale(selectedOption.value);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setUploadedFile(file);\n      setIsRecording(false);\n      uploadAudio(file);\n    }\n  };\n\n  const uploadAudio = async () => {\n    setIsUploading(true);\n    setShowLongProcessMessage(false);\n  \n    const uploadFormData = new FormData();\n    uploadFormData.append(\"file\", uploadedFile);\n    uploadFormData.append(\"language\", selectedLanguageCode);\n  \n    try {\n      const uploadResponse = await axios.post(\"/api/upload\", uploadFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      // Assuming the response contains lyrics and possibly other data\n      const lyrics = uploadResponse.data.lyrics;\n      analyzePitches(uploadedFile, lyrics, selectedScale);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error.response?.data);\n      setIsUploading(false);\n      setShowLongProcessMessage(false);\n    }\n  };\n\n  const analyzePitches = async (audioFile, lyrics, scale) => {\n    const analyzeFormData = new FormData();\n    analyzeFormData.append(\"file\", audioFile);\n    analyzeFormData.append(\"lyrics\", JSON.stringify(lyrics));\n    analyzeFormData.append(\"scale\", scale);\n  \n    try {\n      const analyzeResponse = await axios.post(\"/api/analyze-pitches\", analyzeFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setPitches(analyzeResponse.data.pitches);\n      const audioData = analyzeResponse.data.audio_file;\n      console.log(audioData);\n\n    } catch (error) {\n      console.error(\"Error analyzing pitches:\", error.response?.data);\n    } finally {\n      setIsUploading(false);\n      setShowLongProcessMessage(false);\n    }\n  };\n  \n  \n\n  const startRecording = async () => {\n    if (uploadedFile) return; // Do not start recording if a file has been uploaded\n\n    setIsRecording(true);\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    audioChunksRef.current = [];\n    mediaRecorderRef.current.ondataavailable = (event) => {\n      audioChunksRef.current.push(event.data);\n    };\n\n    mediaRecorderRef.current.onstop = uploadAudio; // Call uploadAudio directly after recording stops\n\n    mediaRecorderRef.current.start();\n  };\n\n  const handleStopRecording = () => {\n    setIsRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  return (\n    <div className=\"container\">\n      {isUploading ? (\n        <div className=\"spinner-container\">\n          <ClipLoader color=\"#FFF\" size={50} />\n          {showLongProcessMessage && <p>This may take a while...</p>}\n        </div>\n      ) : (\n        <div>\n          <h1>Pitch It</h1>\n          <input\n            type=\"file\"\n            onChange={handleFileUpload}\n            disabled={isRecording}\n            accept=\"audio/*\"\n          />\n          <button\n            onClick={isRecording ? handleStopRecording : startRecording}\n            disabled={!!uploadedFile}\n            className={`record-button ${isRecording ? \"recording\" : \"\"}`}\n          >\n            <div className={isRecording ? ('inner-square') : ('inner-circle')} />\n          </button>\n          <div className=\"selectors\">\n            <Select\n              options={languageOptions}\n              onChange={handleChangeLanguage}\n              placeholder=\"Language\"\n              styles={selectStyle}\n              isDisabled={isRecording || isUploading}\n            />\n            <Select\n              options={scaleOptions}\n              onChange={handleChangeScale}\n              placeholder=\"Key\"\n              styles={selectStyle}\n              isDisabled={isRecording || isUploading}\n            />\n          </div>\n          {pitches && pitches.map((pitch, index) => (\n            <div key={index}>\n              <p>{pitch.note}</p>\n              <h1>{pitch.frequency}</h1>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}