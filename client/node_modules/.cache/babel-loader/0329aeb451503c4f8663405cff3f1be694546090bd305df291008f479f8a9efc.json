{"ast":null,"code":"import React from'react';import{ClipLoader}from\"react-spinners\";import useAudioRecorder from'./useAudioRecorder';import useFileUploader from'./useFileUploader';import Selector from'./selector';import RecordingButton from'./recordingButton';import{LANGUAGES,SCALES}from'../constants';import'./audioRecorder.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioRecorder=()=>{const languageOptions=Object.entries(LANGUAGES).map(_ref=>{let[name,code]=_ref;return{value:code,label:name.charAt(0).toUpperCase()+name.slice(1)};});const scaleOptions=SCALES.map(scale=>({value:scale,label:scale}));console.log(scaleOptions);console.log(languageOptions);const selectStyle={control:provided=>({...provided,backgroundColor:\"darkgray\",color:\"white\",width:\"30vw\"}),singleValue:provided=>({...provided,color:\"white\"}),option:(provided,state)=>({...provided,backgroundColor:state.isSelected?\"gray\":\"darkgray\",color:\"white\",\":hover\":{backgroundColor:\"gray\"}}),placeholder:provided=>({...provided,color:\"white\"}),input:provided=>({...provided,color:\"white\"})};const{isRecording,startRecording,stopRecording,uploadedFile,setUploadedFile,selectedLanguageCode,setSelectedLanguageCode,selectedScale,setSelectedScale,pitches,isUploading,showLongProcessMessage}=useFileUploader(useAudioRecorder());return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:isUploading?/*#__PURE__*/_jsxs(\"div\",{className:\"spinner-container\",children:[/*#__PURE__*/_jsx(ClipLoader,{color:\"#FFF\",size:50}),showLongProcessMessage&&/*#__PURE__*/_jsx(\"p\",{children:\"This may take a while...\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pitch It\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:event=>setUploadedFile(event.target.files[0]),disabled:isRecording,accept:\"audio/*\"}),/*#__PURE__*/_jsx(RecordingButton,{isRecording:isRecording,startRecording:startRecording,stopRecording:stopRecording,uploadedFile:uploadedFile}),/*#__PURE__*/_jsxs(\"div\",{className:\"selectors\",children:[/*#__PURE__*/_jsx(Selector,{options:languageOptions,selectedValue:selectedLanguageCode,onChange:setSelectedLanguageCode,isDisabled:isRecording||isUploading,selectStyle:selectStyle,name:\"Language\"}),/*#__PURE__*/_jsx(Selector,{options:scaleOptions,selectedValue:selectedScale,name:\"Scale\",onChange:setSelectedScale,isDisabled:isRecording||isUploading,selectStyle:selectStyle})]}),pitches.map((pitch,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:pitch.note}),/*#__PURE__*/_jsx(\"h1\",{children:pitch.frequency})]},index))]})});};export default AudioRecorder;","map":{"version":3,"names":["React","ClipLoader","useAudioRecorder","useFileUploader","Selector","RecordingButton","LANGUAGES","SCALES","jsx","_jsx","jsxs","_jsxs","AudioRecorder","languageOptions","Object","entries","map","_ref","name","code","value","label","charAt","toUpperCase","slice","scaleOptions","scale","console","log","selectStyle","control","provided","backgroundColor","color","width","singleValue","option","state","isSelected","placeholder","input","isRecording","startRecording","stopRecording","uploadedFile","setUploadedFile","selectedLanguageCode","setSelectedLanguageCode","selectedScale","setSelectedScale","pitches","isUploading","showLongProcessMessage","className","children","size","type","onChange","event","target","files","disabled","accept","options","selectedValue","isDisabled","pitch","index","note","frequency"],"sources":["/var/www/pitch-it/client/src/components/audioRecorder.js"],"sourcesContent":["import React from 'react';\nimport { ClipLoader } from \"react-spinners\";\nimport useAudioRecorder from './useAudioRecorder';\nimport useFileUploader from './useFileUploader';\nimport Selector from './selector';\nimport RecordingButton from './recordingButton';\nimport { LANGUAGES, SCALES } from '../constants';\nimport './audioRecorder.css';\n\nconst AudioRecorder = () => {\n\n  const languageOptions = Object.entries(LANGUAGES).map(([name, code]) => ({\n    value: code,\n    label: name.charAt(0).toUpperCase() + name.slice(1),\n  }));\n\n  const scaleOptions = SCALES.map(scale => ({\n    value: scale,\n    label: scale,\n  }));\n\n  console.log(scaleOptions);\n  console.log(languageOptions);\n  \n\n  const selectStyle = {\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: \"darkgray\",\n      color: \"white\",\n      width: \"30vw\",\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isSelected ? \"gray\" : \"darkgray\",\n      color: \"white\",\n      \":hover\": {\n        backgroundColor: \"gray\",\n      },\n    }),\n    placeholder: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n    input: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n  };\n\n  const {\n    isRecording,\n    startRecording,\n    stopRecording,\n    uploadedFile,\n    setUploadedFile,\n    selectedLanguageCode,\n    setSelectedLanguageCode,\n    selectedScale,\n    setSelectedScale,\n    pitches,\n    isUploading,\n    showLongProcessMessage,\n  } = useFileUploader(useAudioRecorder());\n\n  return (\n    <div className=\"container\">\n      {isUploading ? (\n        <div className=\"spinner-container\">\n          <ClipLoader color=\"#FFF\" size={50} />\n          {showLongProcessMessage && <p>This may take a while...</p>}\n        </div>\n      ) : (\n        <div>\n          <h1>Pitch It</h1>\n          <input\n            type=\"file\"\n            onChange={(event) => setUploadedFile(event.target.files[0])}\n            disabled={isRecording}\n            accept=\"audio/*\"\n          />\n          <RecordingButton\n            isRecording={isRecording}\n            startRecording={startRecording}\n            stopRecording={stopRecording}\n            uploadedFile={uploadedFile}\n          />\n          <div className=\"selectors\">\n          <Selector\n  options={languageOptions}\n  selectedValue={selectedLanguageCode}\n  onChange={setSelectedLanguageCode}\n  isDisabled={isRecording || isUploading}\n  selectStyle={selectStyle}\n  name=\"Language\"\n/>\n\n            <Selector\n              options={scaleOptions}\n              selectedValue={selectedScale}\n              name=\"Scale\"\n              onChange={setSelectedScale}\n              isDisabled={isRecording || isUploading}\n              selectStyle={selectStyle}\n            />\n          </div>\n          {pitches.map((pitch, index) => (\n            <div key={index}>\n              <p>{pitch.note}</p>\n              <h1>{pitch.frequency}</h1>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}