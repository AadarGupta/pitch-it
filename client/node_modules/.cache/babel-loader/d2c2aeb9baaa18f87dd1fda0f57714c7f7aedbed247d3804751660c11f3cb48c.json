{"ast":null,"code":"import React,{useState,useRef}from\"react\";import axios from\"axios\";import{ClipLoader}from\"react-spinners\";import Select from\"react-select\";import{LANGUAGES,SCALES}from\"../constants.js\";import\"./audioRecorder.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioRecorder=()=>{const[isRecording,setIsRecording]=useState(false);const[isUploading,setIsUploading]=useState(false);const[showLongProcessMessage,setShowLongProcessMessage]=useState(false);const[selectedLanguageCode,setSelectedLanguageCode]=useState(\"\");const[selectedScale,setSelectedScale]=useState(\"\");const[pitches,setPitches]=useState([]);const mediaRecorderRef=useRef(null);const audioChunksRef=useRef([]);const scaleOptions=SCALES.map(scale=>({value:scale,label:scale}));const languageOptions=Object.entries(LANGUAGES).map(_ref=>{let[name,code]=_ref;return{value:code,label:name.charAt(0).toUpperCase()+name.slice(1)};});const selectStyle={control:provided=>({...provided,backgroundColor:\"darkgray\",color:\"white\",width:\"30vw\"}),singleValue:provided=>({...provided,color:\"white\"}),option:(provided,state)=>({...provided,backgroundColor:state.isSelected?\"gray\":\"darkgray\",color:\"white\",\":hover\":{backgroundColor:\"gray\"}}),placeholder:provided=>({...provided,color:\"white\"}),input:provided=>({...provided,color:\"white\"})};const handleChangeLanguage=selectedOption=>{setSelectedLanguageCode(selectedOption.value);};const handleChangeScale=selectedOption=>{setSelectedScale(selectedOption.value);};const uploadAudio=async audioBlob=>{setIsUploading(true);setShowLongProcessMessage(false);const timer=setTimeout(()=>{setShowLongProcessMessage(true);},10000);const audioFile=new File([audioBlob],\"recording.mp3\",{type:\"audio/mp3\"});const formData=new FormData();formData.append(\"file\",audioFile);formData.append(\"language\",selectedLanguageCode);try{const response=await axios.post(\"/api/upload\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});console.log(\"File successfully uploaded\",response.data);if(response.data.lyrics){const pitchData=new FormData();pitchData.append(\"file\",audioFile);pitchData.append(\"lyrics\",JSON.stringify(response.data.lyrics));pitchData.append(\"scale\",selectedScale);console.log(pitchData);await pitchAnalysis(pitchData);}}catch(error){console.error(\"Error uploading file\",error.response.data);}finally{setIsUploading(false);setShowLongProcessMessage(false);clearTimeout(timer);}};const pitchAnalysis=async formData=>{try{const response=await axios.post(\"/api/analyze-pitches\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});console.log(\"File successfully uploaded\",response.data);setPitches(response.data.pitches);}catch(error){console.error(\"Error uploading file\",error.response.data);}finally{setIsUploading(false);}};const startRecording=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true});mediaRecorderRef.current=new MediaRecorder(stream);audioChunksRef.current=[];mediaRecorderRef.current.ondataavailable=event=>{audioChunksRef.current.push(event.data);};mediaRecorderRef.current.onstop=async()=>{const audioBlob=new Blob(audioChunksRef.current,{type:\"audio/mp3\"});await uploadAudio(audioBlob);};mediaRecorderRef.current.start();setIsRecording(true);}catch(err){console.error(\"Error starting audio recording:\",err);}};const handleStop=()=>{setIsRecording(false);mediaRecorderRef.current.stop();};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:isUploading?/*#__PURE__*/_jsxs(\"div\",{className:\"spinner-container\",children:[/*#__PURE__*/_jsx(ClipLoader,{color:\"#FFF\",size:50}),showLongProcessMessage&&/*#__PURE__*/_jsx(\"p\",{children:\"This may take a while...\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Record Audio Here:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:isRecording?handleStop:startRecording,className:\"record-button \".concat(isRecording?\"recording\":\"\"),children:/*#__PURE__*/_jsx(\"div\",{className:isRecording?\"inner-square\":\"inner-circle\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"selectors\",children:[/*#__PURE__*/_jsx(Select,{options:languageOptions,onChange:handleChangeLanguage,placeholder:\"Language\",styles:selectStyle}),/*#__PURE__*/_jsx(Select,{options:scaleOptions,onChange:handleChangeScale,placeholder:\"Key\",styles:selectStyle})]}),pitches?pitches.map(lyric=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:lyric.pitch}),/*#__PURE__*/_jsx(\"h1\",{children:lyric.word})]},lyric.word)):null]})});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","axios","ClipLoader","Select","LANGUAGES","SCALES","jsx","_jsx","jsxs","_jsxs","AudioRecorder","isRecording","setIsRecording","isUploading","setIsUploading","showLongProcessMessage","setShowLongProcessMessage","selectedLanguageCode","setSelectedLanguageCode","selectedScale","setSelectedScale","pitches","setPitches","mediaRecorderRef","audioChunksRef","scaleOptions","map","scale","value","label","languageOptions","Object","entries","_ref","name","code","charAt","toUpperCase","slice","selectStyle","control","provided","backgroundColor","color","width","singleValue","option","state","isSelected","placeholder","input","handleChangeLanguage","selectedOption","handleChangeScale","uploadAudio","audioBlob","timer","setTimeout","audioFile","File","type","formData","FormData","append","response","post","headers","console","log","data","lyrics","pitchData","JSON","stringify","pitchAnalysis","error","clearTimeout","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","onstop","Blob","start","err","handleStop","stop","className","children","size","onClick","concat","options","onChange","styles","lyric","pitch","word"],"sources":["/var/www/pitch-it/client/src/components/audioRecorder.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { ClipLoader } from \"react-spinners\";\n\nimport Select from \"react-select\";\nimport { LANGUAGES, SCALES } from \"../constants.js\";\nimport \"./audioRecorder.css\";\n\nconst AudioRecorder = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showLongProcessMessage, setShowLongProcessMessage] = useState(false);\n  const [selectedLanguageCode, setSelectedLanguageCode] = useState(\"\");\n  const [selectedScale, setSelectedScale] = useState(\"\");\n  const [pitches, setPitches] = useState([]);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const scaleOptions = SCALES.map(scale => ({\n    value: scale,\n    label: scale,\n  }));\n\n  const languageOptions = Object.entries(LANGUAGES).map(([name, code]) => ({\n    value: code,\n    label: name.charAt(0).toUpperCase() + name.slice(1),\n  }));\n\n  const selectStyle = {\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: \"darkgray\",\n      color: \"white\",\n      width: \"30vw\",\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isSelected ? \"gray\" : \"darkgray\",\n      color: \"white\",\n      \":hover\": {\n        backgroundColor: \"gray\",\n      },\n    }),\n    placeholder: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n    input: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n  };\n\n  const handleChangeLanguage = (selectedOption) => {\n    setSelectedLanguageCode(selectedOption.value);\n  };\n\n  const handleChangeScale = (selectedOption) => {\n    setSelectedScale(selectedOption.value);\n  };\n\n  const uploadAudio = async (audioBlob) => {\n    setIsUploading(true);\n    setShowLongProcessMessage(false);\n\n    const timer = setTimeout(() => {\n      setShowLongProcessMessage(true);\n    }, 10000);\n\n    const audioFile = new File([audioBlob], \"recording.mp3\", {\n      type: \"audio/mp3\",\n    });\n\n    const formData = new FormData();\n    formData.append(\"file\", audioFile);\n    formData.append(\"language\", selectedLanguageCode);\n\n    try {\n      const response = await axios.post(\n        \"/api/upload\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      console.log(\"File successfully uploaded\", response.data);\n\n      if (response.data.lyrics) {\n        const pitchData = new FormData();\n        pitchData.append(\"file\", audioFile);\n        pitchData.append(\"lyrics\", JSON.stringify(response.data.lyrics));\n        pitchData.append(\"scale\", selectedScale);\n        console.log(pitchData);\n        await pitchAnalysis(pitchData);\n      }\n    } catch (error) {\n      console.error(\"Error uploading file\", error.response.data);\n    } finally {\n      setIsUploading(false);\n      setShowLongProcessMessage(false);\n      clearTimeout(timer);\n    }\n  };\n\n  const pitchAnalysis = async (formData) => {\n    try {\n      const response = await axios.post(\n        \"/api/analyze-pitches\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      console.log(\"File successfully uploaded\", response.data);\n      setPitches(response.data.pitches);\n    } catch (error) {\n      console.error(\"Error uploading file\", error.response.data);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/mp3\",\n        });\n        await uploadAudio(audioBlob);\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error(\"Error starting audio recording:\", err);\n    }\n  };\n\n  const handleStop = () => {\n    setIsRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  return (\n    <div className=\"container\">\n      {isUploading ? (\n        <div className=\"spinner-container\">\n          <ClipLoader color=\"#FFF\" size={50} />\n          {showLongProcessMessage && <p>This may take a while...</p>}\n        </div>\n      ) : (\n        <div className=\"container\">\n          <p>Record Audio Here:</p>\n            <button\n              onClick={isRecording ? handleStop : startRecording}\n              className={`record-button ${isRecording ? \"recording\" : \"\"}`}\n            >\n              <div className={isRecording ? \"inner-square\" : \"inner-circle\"} />\n            </button>\n            <div className=\"selectors\">\n              <Select\n                options={languageOptions}\n                onChange={handleChangeLanguage}\n                placeholder=\"Language\"\n                styles={selectStyle}\n              />\n              <Select\n                options={scaleOptions}\n                onChange={handleChangeScale}\n                placeholder=\"Key\"\n                styles={selectStyle}\n              />\n            </div>\n          {pitches\n            ? pitches.map((lyric) => (\n                <div key={lyric.word}>\n                  <p>{lyric.pitch}</p>\n                  <h1>{lyric.word}</h1>\n                </div>\n              ))\n            : null}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}